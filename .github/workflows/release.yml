name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Get version
      id: extract_version
      run: echo "version=$(jq -r '.version' manifest.json)" >> $GITHUB_OUTPUT

    - name: Build plugin
      run: node esbuild.config.mjs production

    - name: Check if flylighter directory exists
      run: |
        if [ ! -d "flylighter" ]; then
          echo "Error: Directory 'flylighter' does not exist."
          exit 1
        fi

    - name: Zip build folder
      run: |
        zip -r "flylighter_obsidian-plugin_${{ steps.extract_version.outputs.version }}.zip" flylighter

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-zip
        path: flylighter_obsidian-plugin_${{ steps.extract_version.outputs.version }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-zip

    - name: Get version
      id: extract_version
      run: echo "version=$(jq -r '.version' manifest.json)" >> $GITHUB_OUTPUT

    - name: Get merge commit messages
      id: get_commits
      run: echo "commits=$(git log --merges -1 --pretty=format:'%b')" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        release_name: Flylighter Obsidian Plugin - ${{ steps.extract_version.outputs.version }}
        body: |
          Commits:
          ${{ steps.get_commits.outputs.commits }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./flylighter_obsidian-plugin_${{ steps.extract_version.outputs.version }}.zip
        asset_name: flylighter_obsidian-plugin_${{ steps.extract_version.outputs.version }}.zip
        asset_content_type: application/zip